<launch>
	<include file="$(find duckietown)/machines"/>
	<arg name="pkg_name" value="led_detection"/>
	<arg name="veh" default="duckiebot0" doc="Name of vehicle. ex: megaman"/>
	<arg name="local" default="false" doc="true for running on laptop. false for running on vehicle."/>
	<arg name="config" default="baseline" doc="Specify a config."/>
	<arg name="param_file_name" default="default" doc="Specify a param file. ex:megaman"/>
	<arg name="node_name" default="LED_detector_node"/>
	<arg name="continuous" default="True"/> <!-- manual trigger required if false [interactive mode] -->
    <arg name="protocol_file" default="LED_protocol"/>
    <arg name="location_config" default="location_config"/>

	<!-- Run detector on remote (vehicle) -->
	<node ns="$(arg veh)" pkg="$(arg pkg_name)" type="LED_detector_node.py" name="LED_detector_node" output="screen" clear_params="true" required="true">
		<rosparam command="load" file="$(find duckietown)/config/$(arg config)/led_interpreter/LED_protocol.yaml"/>
		<rosparam command="load" file="$(find duckietown)/config/$(arg config)/$(arg pkg_name)/$(arg node_name)/$(arg param_file_name).yaml"/>
		<param name="continuous" type="bool" value="$(arg continuous)" />
	</node>	
    
	<node ns="$(arg veh)" pkg="led_interpreter" type="LED_interpreter_node.py" name="LED_interpreter_node" output="screen" required="true">
            <rosparam command="load" file="$(find duckietown)/config/$(arg config)/led_interpreter/$(arg protocol_file).yaml"/>
            <rosparam command="load" file="$(find duckietown)/config/$(arg config)/led_interpreter/$(arg location_config).yaml"/>
            <param name="intersectionType" value="trafficLight"/>
    </node>
    <!--<node ns="$(arg veh)" name="new_joy_mapper_node" pkg="joy_mapper_dev" type="new_joy_mapper_node.py" output="screen"/> -->
</launch>